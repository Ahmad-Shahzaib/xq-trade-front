/* Accordion button icon for dark theme: plus icon, blue color */
[data-bs-theme="dark"] .accordion-button::after {
    --ra-accordion-btn-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%232196f3'%3e%3cpath d='M8 1a.5.5 0 0 1 .5.5V7.5H14.5a.5.5 0 0 1 0 1H8.5V14.5a.5.5 0 0 1-1 0V8.5H1.5a.5.5 0 0 1 0-1H7.5V1.5A.5.5 0 0 1 8 1z'/%3e%3c/svg%3e");
    --ra-accordion-btn-active-icon: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%232196f3'%3e%3cpath d='M8 1a.5.5 0 0 1 .5.5V7.5H14.5a.5.5 0 0 1 0 1H8.5V14.5a.5.5 0 0 1-1 0V8.5H1.5a.5.5 0 0 1 0-1H7.5V1.5A.5.5 0 0 1 8 1z'/%3e%3c/svg%3e");
}
.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}


/* change option hover effect color */
.select .form-select option {
  background: linear-gradient(rgb(31, 14, 39), rgb(60, 20, 80)) !important;
  color: white;
}

/* selct dropdown bg */


select.form-select option:hover {
  background: linear-gradient(rgb(31, 14, 39), rgb(60, 20, 80)) !important;
  color: white;
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}



@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}


* {
  box-sizing: border-box;
}
html, body {
  height: 100%;
}

body {
  color: #222;
  font-family: "Helvetica Neue", sans-serif;
  font-weight: 200;
  margin: 0 50px;
}

.react-draggable, .cursor {
  cursor: move;
}
.no-cursor {
  cursor: auto;
}
.cursor-y {
  cursor: ns-resize;
}
.cursor-x {
  cursor: ew-resize;
}

.react-draggable strong {
  background: #ddd;
  border: 1px solid #999;
  border-radius: 3px;
  display: block;
  margin-bottom: 10px;
  padding: 3px 5px;
  text-align: center;
}

.box {
  background: #fff;
  border: 1px solid #999;
  border-radius: 3px;
  width: 180px;
  height: 180px;
  margin: 10px;
  padding: 10px;
  float: left;
}
.no-pointer-events {
  pointer-events: none;
}
.hovered {
  background-color: gray;
}

  .backdropeffect {

    background: transparent;
    backdrop-filter: blur(20px);
    padding: 20px;
    transition: transform 0.3s ease-in-out;
    z-index: 99999;
    box-shadow: 4px 0px 10px rgba(0, 0, 0, 0.5);
    border-radius: 20px;
    scrollbar-width: none;
    border: 1px solid #110d1a;
  }

  .--ra-accordion-btn-icon {
    color: #fff;
  }

/*
 * RemWrapper needs to take it's styles from this element,
 * and this element can't have an absolute position after it's kicked in.
 * AFAIK it's not possible to do this directly in the RemWrapper component.
 */
.rem-position-fix {
  position: static !important;
}
.card-bg-effect {
  background: rgb(223, 14, 115), ;
  border-radius: 10px;
  color: white;
  box-shadow: 0 4px 24px rgba(82, 3, 113, 0.12);
}
.form-control{
  background: transparent !important;
  border: 1px solid #7c3aed !important;
  backdrop-filter: blur(10px) !important;
 
}

.tv-lightweight-charts{
  border:'2px solid red !important';
}

#chart_id{
  border: 2px solid red !important;
}

canvas{
  border: 2px solid red;
}